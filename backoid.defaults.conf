###################################################################################
# default template - DO NOT EDIT THIS FILE DIRECTLY.                              #
#                    If you wish to override default values, you can create your  #
#                    own [template_default] in /etc/backoid/backoid.conf.         #
#                                                                                 #
#                    you have been warned.                                        #
###################################################################################
[version]
version = 1

[template_default]

# these settings don't make sense in a template, but we use the defaults file
# as our list of allowable settings also, so they need to be present here even if
# unset.
use_template =

# pattern used to match the names of the ZFS snapshot
pattern = ^autosnap_.*_daily$
# the compression algorithm used to compress the snapshot tarballs,
# available compression [bzip2, gzip, lz4, pbzip2, pigz, zstd, pzstd, pxz, xz, none]
compression = zstd
# the compression level used to compress the snapshot tarballs,
# default to whatever is default for the compressor.
compression_level = 3
# the remote target which rclone program used to copy the archives to. e.g. "s3:backoid/"
target =
# the retention of the snapshot tarballs that match the pattern, format in number[h|d|w|m|y]
# h - For hours
# d - For days
# w - For weeks
# m - For months
# y - For years
# if the suffix is empty, it will only keeps X most recent snapshot tarballs 
retention = 7d
# options that will be passed directly to the compressor program
compressor_options =
# options that will be passed directly to the rclone program during the upload
rclone_options =
# options that will be passed directly to 'zfs send' command during the upload
zfs_send_options =
# the size used to split up backup if its size exceeds this value
split_size =
# the method used to transfer files to rclone remote,
# available options are [tar, files, zfs-send].
#
# tar - use `tar` to create a archive first and then stream to remote
# files - use `rclone sync` to sync files to remote
# zfs-send - use `zfs send` to stream snapshosts to remote
#
# 'tar' is the default option for mountpoint != legacy snapshots,
# and 'zfs-send' is the default and only acceptable option for mountpoint=legacy snapshots.
method =
